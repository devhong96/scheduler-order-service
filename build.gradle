buildscript {
    ext {
        queryDslVersion = "5.6.1"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.scheduler'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

jar {
    enabled = false
}

ext {
    springCloudVersion = "2024.0.1"
}

jar {
    enabled = false
}

ext {
    springCloudVersion = "2024.0.1"
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "io.github.openfeign.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // AOP
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    //MSA
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
    implementation 'org.springframework.cloud:spring-cloud-starter-bus-amqp'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.apache.kafka:connect-api:3.9.0'

    implementation 'io.github.openfeign:feign-okhttp:13.5'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.redisson:redisson-spring-boot-starter:3.45.0'

    // SWAGGER
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'

    // JWT
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.12.6'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.12.6'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.12.6'

    // SECURITY
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'


    // Annotation
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "io.github.openfeign.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    // TEST
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation('org.testcontainers:kafka:1.21.0') {
        exclude group: 'org.apache.commons', module: 'commons-compress'
    }
    testImplementation 'org.testcontainers:rabbitmq:1.21.0'
    testImplementation 'org.apache.commons:commons-compress:1.27.1'

    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'io.github.embeddedkafka:embedded-kafka_3:3.9.0'
    testImplementation 'org.springframework.kafka:spring-kafka-test'

    testImplementation 'com.h2database:h2'
    testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock:4.2.0'
//    runtimeOnly 'io.netty:netty-resolver-dns-native-macos:4.1.104.Final:osx-aarch_64'

    compileOnly 'org.projectlombok:lombok'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'io.projectreactor:reactor-test'
    testAnnotationProcessor'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
